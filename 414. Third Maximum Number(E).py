nums = [-4567,2503,-4287,840,6409,4052,-1964,7727,-690,-5085,6302,8803,-2389,2928,-9385,-3662,-3362,-2487,-9649,-1349,-114,-818,-7302,9654,-8526,1030,-1606,-3915,2307,-2514,3066,5909,9825,-5825,7188,-2227,5165,5166,-541,4299,-6969,7019,5220,9023,-3960,-3416,-7703,5576,-9702,926,-8492,-6739,-656,-5115,-5904,2152,5832,-6477,7509,6949,4285,-1245,-5083,206,-2397,2560,-2207,3252,-9344,-4313,-7638,-6487,4546,3621,5642,-6769,-8445,1578,-3540,3841,3391,7509,6893,-3938,5821,9714,-5964,2614,-8334,-6550,-7380,7629,3793,-6820,-7628,8646,7376,-7249,-5487,2719,-22,-2105,9173,-2664,5331,825,583,-3691,-6651,5301,-5130,-609,-298,9034,-852,7946,-4859,-4897,-6563,-5402,7227,7947,8315,-870,-5137,-2980,-5204,3624,-5101,-6679,-4698,-8112,-8927,2468,2571,310,9588,1390,9179,8340,1707,3820,-9663,-3967,5166,9948,-7987,4720,-8395,-1691,-3054,-6911,1054,4685,-680,5753,-8583,-3437,8609,5956,-6216,-8391,699,-7476,9792,-2736,6971,495,6841,360,-668,260,1505,9262,26,6691,-1720,8846,791,-3912,6367,5311,6502,-6243,2528,-4999,5369,-4520,8621,-2075,-24,-4041,-2588,-454,8882,-6487,9481,-9125,-9320,9727,8501,-9228,5319,2909,9621,-9973,-8560,-6674,2113,-4316,6468,7390,7462,5174,1863,-5190,6837,6622,-3447,8265,-7221,-27,-7398,-2271,3278,-5073,6305,-7654,9575,-9767,-427,-8602,-3734,-8943,-3177,-2545,4049,-8911,-8703,4816,9329,308,-9254,-7820,-7174,-4529,-482,9182,-2528,1495,3660,-8854,-7337,-7496,-5283,-5652,51,-2700,-3584,1143,-4836,-7161,-3866,7223,-9227,5817,-8780,-5908,87,6880,5021,8212,-8062,-5572,-7675,7358,7169,2331,7315,5236,6381,-1591,-4300,-8301,-8167,-1289,6258,4178,-5082,95,7648,7952,-7919,1317,-8549,2813,211,3984,1683,-8464,-7049,-5123,-7577,-3144,7082,-4985,3529,-8167,-1255,4161,-8781,8660,-2242,-1008,985,2286,-2091,-536,-7284,6528,9146,8221,-3955,6527,-2866,4133,955,-464,586,7595,6888,-3932,571,-3494,2832,8292,-7403,-3151,4400,3288,-3763,7616,-9733,8894,8020,4472,6476,7768,-2415,8517,-2862,-8344,-1688,5006,-779,3158,3888,-1400,1717,5159,-1493,6229,628,4648,5285,-9113,9836,-3357,7948,-3858,-2245,6331,-4432,-8739,-9026,3929,768,7516,-5785,-6309,7742,-9664,-5207,8853,-3904,-9383,-2238,-2309,2531,3624,-6636,-4366,-9597,-8946,542,-3262,4916,-2664,1809,-2271,-4864,-394,-459,-6967,490,1518,-1428,5087,-1746,9740,2654,1298,-4189,-4542,3527,8748,-2590,-7948,-714,4069,-4445,5607,2466,-6577,5819,-1012,865,6097,5738,5532,-8688,2436,-1596,2362,-8921,-8127,424,-4901,-8742,8994,2862,-8762,-4596,3616,583,1961,7207,-3825,-1971,-7453,6783,6065,-2895,553,-8213,5904,878,2212,-8974,5393,-4790,6242,9388,7771,2783,658,-7558,4790,9557,-526,-1922,3886,-9584,8990,-5817,-5182,-3536,8674,-790,-1157,-4169,2598,-3366,-2015,4936,-7549,8474,-9664,2735,-341,-103,3898,-1654,-6744,-3653,6938,5359,-1070,4830,8814,-3788,8871,6947,2228,2355,-4941,2803,4530,3581,-2500,1102,-9068,-5708,-1799,-7730,4747,6400,4739,2048,-4910,2795,-1364,-7715,2510,-7201,-2420,5598,-7472,1312,7493,-4579,-2760,4217,4395,-8599,9725,3228,5921,5667,-7548,-3545,970,800,1987,-5244,-9034,-8233,-1321,537,4724,9186,1207,-5143,5296,9986,4303,3557,-7968,-1116,6782,-4600,7626,5610,-4441,3689,236,4591,-8157,-3704,9958,8778,5005,1451,5181,7573,1805,-2403,3375,2442,7062,198,-1837,-9176,-3057,-6512,68,-9698,8000,-6846,4452,6922,-7304,840,6193,-8023,-1140,1280,1690,3872,-3453,8736,-2372,2904,-2560,3520,6703,-7009,-913,-3110,7108,8490,-2684,-3754,1659,-2989,9458,5933,4830,3439,-5427,-821,-6746,-1508,4736,-364,21,-3599,-2211,-7742,4018,4105,4463,5368,3907,5839,3436,-6811,-2771,7918,497,-1543,-46,5937,-8448,-9191,4980,2060,4973,9328,9428,-7635,-2764,9705,-1287,4798,-737,7579,8290,3152,-6772,7835,6377,343,-1908,3336,-7052,-448,-732,-5660,-4745,7464,4847,-8097,348,4035,-5390,-9696,3998,-9737,2637,-1229,-9359,218,-7113,-1283,2193,9803,-607,-1980,3985,-1218,8744,-6432,-3087,-1979,9247,-4231,-80,-8600,-8684,-3691,1504,9741,8888,-2502,-9232,-7369,2722,8971,-4198,-2000,-1089,2345,2300,-1213,9178,2980,-6607,-2535,7676]
class Solution:
    def thirdMax(self, nums: List[int]) -> int:
        nums = sorted(list(set(nums)))
        return nums[-3] if len(nums) > 2 else nums[-1]